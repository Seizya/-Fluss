:root {
    --border-color: rgba(230, 230, 230, .18);
    --border-color-1: rgba(230, 230, 230, .6);
    --text-color: rgba(230, 230, 230, 1);
    --node-branch: 3vh;
    --node-height: 6vh;
}

* {
    margin: 0;
    padding: 0;

    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

body {
    width: 100vw;
    height: 100vh;
}

@font-face {
    font-family: 'Genzi';
    src: url("./SourceHanSans-ExtraLight.otf");
}

body {
    font-family: Genzi;
}

/* ------------------------------------------- */

.menu_button {
    position: fixed;
    right: 4vh;
    width: 10vh;
    height: 10vh;
    border-radius: 50%;

    background-color: rgba(19, 74, 99, 1);
    box-shadow: rgba(0, 0, 0, .8) 0 0 8px;
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center center;

    transition-duration: .1s;
}

.menu_button:not(open) {
    bottom: 4vh;
}

.menu_button.open {}

.menu_button.active {
    background-color: rgba(239, 69, 74, 1);
    box-shadow: rgba(230, 230, 230, .8) 0 0 10px;
}

#menu_button_add {
    right: 3vh;
    bottom: 3vh;
    width: 12vh;
    height: 12vh;

    background-color: rgba(00, 76, 113, 1);
    background-image: url("./img/menu_button_add.png");
    background-size: 55%;
    /* border: 2px solid rgba(230, 230, 230, 1); */
}

#menu_button_add.open {
    box-shadow: rgba(230, 230, 230, .8) 0 0 10px;
}

#menu_button_add.active {
    background-color: rgba(234, 0, 50, 1);
}

#menu_button_setting {
    background-image: url("./img/menu_button_setting.png");
    background-size: 60%;
}

#menu_button_setting.open {
    bottom: 18vh;
}

/* ------------------------------------------- */

#List {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;

    background-color: rgba(80, 80, 80, 1);
    /*Temp*/
    font-size: calc(var(--node-height)*0.62);
    font-weight: lighter;

    overflow-x: hidden;
    overflow-y: scroll;
    scrollbar-width: none;
}

#List::-webkit-scrollbar {
    display: none;
}

#List * {
    position: relative;
    right: 0;
    width: 100%;

    overflow: hidden;
    background-color: inherit;
    /*Temp*/

    user-select: none;
}

#List span {
    border: none;
    pointer-events: none;
    /* vertical-align: baseline; */
    /* font-weight:bold; */
}

#List :not(.active) span {
    /* vertical-align: middle; */
}

#List {
    padding-top: var(--node-branch);
}

#List ul,
#List li {
    margin-left: var(--node-branch);
}

/* ------------------------------------------- */

#List li {
    height: var(--node-height);

    line-height: var(--node-height);

    /* border-top: 3px solid var(--border-color); */
    color: var(--text-color);

    cursor: pointer;
}

#List li.sleep {
    height: 0;
    border: none;
}

#List ul>li,
#List ul {
    font-size: calc(100% - 0.15vh);
}

#List li.active {
    margin-top: var(--node-branch);
    border-radius: calc(var(--node-height)/3) 0 0 0;
}

/* 
Disables margin-top for the eldest son element that does not have class sleep.
I'm frustrated, so I'll control it with Javascript. 
*/

/* ------------------------------------------- */

#List ul {
    /* left: 1.8vh; */
    height: 0;
    /* height: auto; */
    /* width: calc(100% - 1.8vh); */
    /* transform: scaleY(0); */
    transform-origin: top;
    transition-timing-function: ease-in;
    /* transition-duration: 200ms; */

    padding: 0;
    /* padding-left: 3vh; */
    padding-bottom: none;
    border: none;
}

#List ul.open {
    height: auto;
    /* transform: scaleY(1); */
    padding-bottom: 3vh;
    border-radius: 0 0 0 calc(var(--node-height)/3);
}

#List ul:not(.open) {
    transform: scaleY(0);
}

/* #List ul.open+* {
    position: relative;
    box-shadow: rgba(0, 0, 0, .4) 0 -8px 10px -10px;
} */

#List ul.open {
    margin-bottom: var(--node-branch);
}

/* 
Disables margin-top for the youngest son element that does not have class sleep.
I'm frustrated, so I'll control it with Javascript. 
*/

/* -border--------- */

#List ul,
#List li {
    border-left-width: 4px;
    border-left-style: solid;

    transition-duration: 80ms;
}

#List li:not(.sleep).active {
    border-top-width: 3px;
    border-top-style: solid;
}

#List ul.open {
    border-bottom-width: 3px;
    border-bottom-style: solid;

}

#List ul.open>li:first-of-type:not(.active) {
    /* border-top: 3px dashed var(--border-color); */
}

#List ul.open+li,
#List li.active {
    /* border-top: 3px solid var(--border-color); */
}

#List ul.open>li:last-of-type:not(.active) {
    /* border-bottom: 3px dashed var(--border-color); */
}

#List ul.open>ul:last-of-type.open {
    /* border-bottom: 3px solid  var(--border-color); */
}

#List ul.open,
#List li.active {
    /* border-left: 3px solid rgba(234, 0, 50, 1); */
    border-left: 3px solid var(--border-color);
}

#List ul.open>li:not(.active) {
    /* border-left: 3px dashed var(--border-color); */
}

/* #List ul.open, */
#List li.active {
    /* color: rgba(239, 69, 74, 1); */
    /* border-left: 3px solid rgba(239, 69, 74, .8) !important; */
}

#List>ul,
#List>li {
    /* border-left: none !important; */
}

/* -border------------------------------- */

#List .color_cycle_0 {
    border-color: rgba(255, 215, 0, 1);
}

#List .color_cycle_0.active,
#List .color_cycle_0.open {
    border-color: rgba(255, 215, 0, .5);
}

#List .color_cycle_1 {
    border-color: rgba(218, 112, 214, 1);
}

#List .color_cycle_1.active,
#List .color_cycle_1.open {
    border-color: rgba(218, 112, 214, .5);
}

#List .color_cycle_2 {
    border-color: rgba(135, 206, 250, 1);
}

#List .color_cycle_2.active,
#List .color_cycle_2.open {
    border-color: rgba(135, 206, 250, .5);
}

/* ------------------------------------------- */

#List li {
    padding-left: calc(1vh*2 + 1.5vh);
}

#List li.button::before {
    content: "";

    /* display: inline-block; */
    position: absolute;
    top: calc(var(--node-height) /2 - 1.5vh/2);
    left: 1vh;
    /* margin-top: calc(var(--node-height) /2 - 1.3vh/2); */
    /* margin-left: 1vh; */
    /* margin-right: 1vh; */
    width: 1.5vh;
    height: 1.5vh;

    border: 0.4rem solid;
    border-color: rgba(200, 200, 200, 1) rgba(200, 200, 200, 1) transparent transparent;
    box-sizing: border-box;

    transform-origin: center center;
    transform: translateX(calc(-1.5vh / 2.8284271247461903)) rotate(45deg);
    transition-duration: .1s;
}

#List li.button.active::before {
    transform: translateY(calc(-1.5vh / 2.8284271247461903)) rotate(135deg);
    transition-duration: .1s;
    border-color: rgba(239, 69, 74, 1) rgba(239, 69, 74, 1) transparent transparent;
}

#List li:not(.button)::before {
    content: "";

    /* display: inline-block; */
    position: absolute;
    top: calc(var(--node-height) /2 - 0.4rem/2);
    left: 1vh;
    /* margin-top: calc(var(--node-height) /2 - 1.3vh/2); */
    /* margin-left: 1vh; */
    /* margin-right: 1vh; */
    width: 1.5vh;
    height: 1.5vh;

    border-top: 0.4rem solid rgba(200, 200, 200, 0.3);
    box-sizing: border-box;

    /* transform: translateY(-1vh); */
    transition-duration: .1s;
}

/* ------------------------------------------- */

#menu_setting,
#menu_setting+ul li {
    /* color: rgba(50, 50, 50, 1) !important; */
}

#menu_setting,
#menu_setting+*,
#menu_setting+* * {
    /* border-color: rgba(100, 100, 100, .2) !important; */
}

#menu_setting::before,
#menu_setting+* li.button::before {
    /* border-color: rgba(100, 100, 100, .7) rgba(100, 100, 100, .7) transparent transparent !important; */
}

#menu_setting+* li:not(.button) {
    /* border-color: rgba(100, 100, 100, .5) !important; */
}